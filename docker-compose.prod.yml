version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: autotradelk-postgres
    environment:
      POSTGRES_DB: autotradelk
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d autotradelk"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotradelk-app
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: autotradelk
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-Admin@123}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Initializing database...' &&
        npm run db:setup-prod &&
        echo 'Starting application...' &&
        npm start
      "

  nginx:
    image: nginx:alpine
    container_name: autotradelk-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
